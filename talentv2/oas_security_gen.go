// Code generated by ogen, DO NOT EDIT.

package talentv2

import (
	"context"
	"net/http"

	"github.com/go-faster/errors"
)

// SecuritySource is provider of security values (tokens, passwords, etc.).
type SecuritySource interface {
	// ClientCredentials provides ClientCredentials security value.
	// Аутентификация учетными данными OAuth2 клиента TalentOAuth.
	ClientCredentials(ctx context.Context, operationName string) (ClientCredentials, error)
	// TalentOAuth provides TalentOAuth security value.
	// Аутентификация токеном TalentOAuth пользователем Таланта.
	TalentOAuth(ctx context.Context, operationName string) (TalentOAuth, error)
}

func (s *Client) securityClientCredentials(ctx context.Context, operationName string, req *http.Request) error {
	t, err := s.sec.ClientCredentials(ctx, operationName)
	if err != nil {
		return errors.Wrap(err, "security source \"ClientCredentials\"")
	}
	req.SetBasicAuth(t.Username, t.Password)
	return nil
}
func (s *Client) securityTalentOAuth(ctx context.Context, operationName string, req *http.Request) error {
	t, err := s.sec.TalentOAuth(ctx, operationName)
	if err != nil {
		return errors.Wrap(err, "security source \"TalentOAuth\"")
	}
	req.Header.Set("Authorization", "Bearer "+t.Token)
	return nil
}
